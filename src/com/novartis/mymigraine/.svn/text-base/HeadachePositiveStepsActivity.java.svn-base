package com.novartis.mymigraine;

import java.util.Calendar;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.Html;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.TextView;

import com.actionbarsherlock.app.ActionBar;
import com.actionbarsherlock.app.SherlockFragmentActivity;
import com.actionbarsherlock.view.Menu;
import com.actionbarsherlock.view.MenuItem;
import com.flurry.android.FlurryAgent;
import com.novartis.mymigraine.common.Constant;
import com.novartis.mymigraine.common.IMigraineEvent;
import com.novartis.mymigraine.common.IMigraineEventChangedListener;
import com.novartis.mymigraine.fragment.HeadacheStep1Fragment;
import com.novartis.mymigraine.fragment.HeadacheStep2Fragment;
import com.novartis.mymigraine.fragment.HeadacheStep3Fragment;
import com.novartis.mymigraine.fragment.HeadacheStep4Fragment;
import com.novartis.mymigraine.fragment.HeadacheStep5Fragment;
import com.novartis.mymigraine.fragment.HeadacheStep6Fragment;
import com.novartis.mymigraine.model.MigraineEvent;

public class HeadachePositiveStepsActivity extends SherlockFragmentActivity
		implements OnClickListener, IMigraineEvent,IMigraineEventChangedListener {
	private TextView txtViewSteps;
	private ImageButton btnStepPrevious, btnStepNext;
	private int step = 1;
	private String stepString = "Step " + step + " of 6";
	private MigraineEvent event;
	private MenuItem menuItemMyDiary, menuItemChart;
	ActionBar actionBar;
	private Calendar eventCreateCal;

	@Override
	protected void onCreate(Bundle savedInstanceState) {

		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_headache_positive_steps);
		actionBar = getSupportActionBar();
		createActionBar();

		if (getIntent().getExtras().containsKey(Constant.KEY_TIMESTAMP))

			eventCreateCal = (Calendar) getIntent().getExtras()
					.get(Constant.KEY_TIMESTAMP);
		else
			eventCreateCal = Calendar.getInstance();
		// getSupportActionBar().setDisplayHomeAsUpEnabled(true);
		// getSupportActionBar().setTitle("My Diary");
		txtViewSteps = (TextView) findViewById(R.id.txtViewSteps);
		txtViewSteps.setText(stepString);
		btnStepPrevious = (ImageButton) findViewById(R.id.btnStepPrevious);
		btnStepPrevious.setOnClickListener(this);
		btnStepNext = (ImageButton) findViewById(R.id.btnStepNext);
		btnStepNext.setOnClickListener(this);
		createMigraineEvent();
		loadFragment(step);
		btnStepPrevious.setEnabled(false);
	}

//	private void createActionBar() {
//		// actionBar.setDisplayShowTitleEnabled(false);
//		actionBar.setBackgroundDrawable(getResources().getDrawable(
//				R.drawable.actionbar_bg));
//		actionBar.setDisplayShowCustomEnabled(true);
//		actionBar.setDisplayShowTitleEnabled(false);
//
//		LayoutInflater inflator = (LayoutInflater) this
//				.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
//		View v = inflator.inflate(R.layout.actionbar_title, null);
//
//		((TextView) v.findViewById(R.id.action_title)).setText(Html
//				.fromHtml(getString(R.string.home_action_title)));
//		((TextView) v.findViewById(R.id.action_subtitle)).setText(Html
//				.fromHtml(getString(R.string.home_action_subtitle)));
//
//		actionBar.setCustomView(v);
//		actionBar.setDisplayHomeAsUpEnabled(false);
//		actionBar.setDisplayShowHomeEnabled(false);
//		// actionBar.setDisplayUseLogoEnabled(false);
//		// actionBar.setHomeButtonEnabled(false);
//	}
	
	private void createActionBar() {
		// actionBar.setDisplayShowTitleEnabled(false);
//		actionBar.setBackgroundDrawable(getResources().getDrawable(
//				R.drawable.actionbar_bg));
//		actionBar.setDisplayShowCustomEnabled(true);
		actionBar.setDisplayShowTitleEnabled(false);
		//actionBar.setIcon(android.R.color.transparent);

//		LayoutInflater inflator = (LayoutInflater) this
//				.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
//		View v = inflator.inflate(R.layout.actionbar_title, null);
//
//		((TextView) v.findViewById(R.id.action_title)).setText(Html
//				.fromHtml(getString(R.string.home_action_title)));
//		((TextView) v.findViewById(R.id.action_subtitle)).setText(Html
//				.fromHtml(getString(R.string.home_action_subtitle)));
//
//		actionBar.setCustomView(v);
		actionBar.setIcon(getResources().getDrawable(R.drawable.ic_actionbar_title));
		actionBar.setDisplayHomeAsUpEnabled(true);
		actionBar.setDisplayShowHomeEnabled(true);
		// actionBar.setDisplayUseLogoEnabled(false);
		actionBar.setHomeButtonEnabled(true);
	}

//	@Override
//	public boolean onCreateOptionsMenu(Menu menu) {
//		super.onCreateOptionsMenu(menu);
//
//		getSupportMenuInflater().inflate(R.menu.activity_migraine_trigger_main,
//				menu);
//		menuItemMyDiary = menu.findItem(R.id.menu_mydiary);
//		menuItemChart = menu.findItem(R.id.menu_charts);
//		activateMyDiary();
//		return true;
//
//	}

	@SuppressLint("NewApi")
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			onBackPressed();
			//actionBar.setDisplayHomeAsUpEnabled(false);
			//actionBar.setDisplayShowTitleEnabled(false);
			break;
//		case R.id.menu_mydiary:
//
//			break;
//		case R.id.menu_charts:
//			// activateChart();
//			Intent intentChart = new Intent(this, ChartActivity.class);
//			// intentChart.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
//			startActivity(intentChart);
//			finish();
//			break;
//		case R.id.menu_diary_log:
//			Intent intentDiaryLog = new Intent(this, DiaryLogDetailsActivity.class);
//			startActivity(intentDiaryLog);
//			finish();
//			break;
//		case R.id.menu_try_excedrin:
//			Intent intentTryExcedrin = new Intent(this,
//					TryExcedrinActivity.class);
//			// intentTryExcedrin.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
//			startActivity(intentTryExcedrin);
//			finish();
//			break;
//		case R.id.menu_learn:
//			Intent learnIntent = new Intent(this, LearnActivity.class);
//			// learnIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
//			startActivity(learnIntent);
//			finish();
//			break;
//		case R.id.menu_help:
//			Intent usingThisAppIntent = new Intent(this, HelpActivity.class);
//			usingThisAppIntent.putExtra(Constant.Url,
//					Constant.VIEW_USING_THIS_APP_ASSET_URL);
//			startActivity(usingThisAppIntent);
//			finish();
//			break;

		}
		return true;
	}

//	private void activateMyDiary() {
//		menuItemMyDiary.setIcon(R.drawable.ic_tab_mydiary_selected);
//		menuItemChart.setIcon(R.drawable.ic_tab_charts_unselected);
//	}

	@Override
	public void createMigraineEvent() {
		event = new MigraineEvent();
		event.setHasHeadache(true);
		event.setDateTime(eventCreateCal.getTime());
		
	}

	@Override
	public MigraineEvent getMigraineEvent() {

		return event;
	}

	@Override
	public void onClick(View v) {
		if (v == btnStepNext) {

			if (step <= 6) {
				step++;
				if (step == 6)
					btnStepNext.setEnabled(false);
				else if (step > 1)
					btnStepPrevious.setEnabled(true);

				loadFragment(step);

			}

		} else if (v == btnStepPrevious) {

			if (step >= 1) {
				step--;
				if (step == 1)
					btnStepPrevious.setEnabled(false);
				else if (step <= 6)
					btnStepNext.setEnabled(true);

				loadFragment(step);

			}

		}

	}

	private void loadFragment(int step) {

		android.support.v4.app.FragmentManager fragmentManager = this
				.getSupportFragmentManager();
		android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager
				.beginTransaction();
		android.support.v4.app.Fragment fragment = null;
		switch (step) {
		case 1:
			fragment = new HeadacheStep1Fragment();
			break;
		case 2:
			fragment = new HeadacheStep2Fragment();
			break;
		case 3:
			fragment = new HeadacheStep3Fragment();
			break;
		case 4:
			fragment = new HeadacheStep4Fragment();
			break;
		case 5:
			fragment = new HeadacheStep5Fragment();
			break;
		case 6:
			fragment = new HeadacheStep6Fragment();
			break;
		default:
			fragment = new HeadacheStep1Fragment();
			break;
		}
		stepString = "Step " + step + " of 6";
		txtViewSteps.setText(stepString);

		fragmentTransaction.replace(R.id.stepFragmentContainer, fragment);
		fragmentTransaction.commit();
	}

	@Override
	public void onEventChanged(MigraineEvent event) {
		
		this.event=event;
		
	}
	@Override
	protected void onStart() {
		
		super.onStart();
		FlurryAgent.onStartSession(this, getString(R.string.flurry_analytics_api_key));
	}
	@Override
	protected void onStop() {
		super.onStop();
		FlurryAgent.onEndSession(this);
	}
	

}
